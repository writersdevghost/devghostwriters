---
import Sidebar from "../components/dashboard/Sidebar.jsx";
import Header from "../components/dashboard/Header.jsx";
import AuthGuard from "../components/AuthGuard.jsx";
import "../styles/global.css";
import favicon from "../assets/favicon.png";

const { title = "Dashboard - AI Code Assistant" } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Dashboard for AI Code Assistant" />
    <link rel="icon" type="image/svg+xml" href={favicon.src} />
    <title>{title}</title>
  </head>
  <body class="bg-gray-100">
    <AuthGuard client:load>
      <div class="min-h-screen flex">
        <Sidebar client:load />

        <div class="flex-1 flex flex-col min-h-screen w-full lg:ml-64">
          <Header client:load />

          <main
            class="flex-1 p-6 mt-20 overflow-auto"
            style="scrollbar-width: none;"
          >
            <slot />
          </main>
        </div>
      </div>

      <div
        id="sidebar-overlay"
        class="fixed inset-0 bg-black/50 z-20 hidden transition-opacity duration-300"
        onclick="document.documentElement.classList.remove('sidebar-open')"
      >
      </div>
    </AuthGuard>

    <style is:global>
      body {
        @apply overflow-x-hidden;
      }

      @media (max-width: 1023px) {
        :root.sidebar-open .sidebar-container {
          transform: translateX(0);
        }

        :root.sidebar-open #sidebar-overlay {
          display: block;
        }
      }

      ::-webkit-scrollbar {
        display: none;
      }

      * {
        -ms-overflow-style: none;
        scrollbar-width: none;
      }
    </style>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const mediaQuery = window.matchMedia("(min-width: 1024px)");

        const handleResize = (e) => {
          if (e.matches) {
            document.documentElement.classList.remove("sidebar-open");
          }
        };

        mediaQuery.addEventListener("change", handleResize);

        handleResize(mediaQuery);

        return () => {
          mediaQuery.removeEventListener("change", handleResize);
        };
      });
    </script>
  </body>
</html>
